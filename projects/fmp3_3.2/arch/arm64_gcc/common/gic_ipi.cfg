/*
 *		プロセッサ間割込みのコンフィギュレーションファイル（GIC用）
 *
 *  $Id: gic_ipi.cfg 282 2021-06-03 06:35:25Z ertl-honda $
 */

/*
 *  ディスパッチハンドラの登録
 */
CLASS(CLS_PRC1){
#ifndef USE_BYPASS_IPI_DISPATCH_HANDER
	DEF_INH(INHNO_IPI_DISPATCH_PRC1,
				{ TA_NULL, _kernel_dispatch_handler });
#endif /* USE_BYPASS_IPI_DISPATCH_HANDER */
	CFG_INT(INTNO_IPI_DISPATCH_PRC1,
				{ TA_ENAINT, INTPRI_IPI_DISPATCH_PRC1 });
}

#if TNUM_PRCID >= 2
CLASS(CLS_PRC2){
#ifndef USE_BYPASS_IPI_DISPATCH_HANDER
	DEF_INH(INHNO_IPI_DISPATCH_PRC2,
				{ TA_NULL, _kernel_dispatch_handler });
#endif /* USE_BYPASS_IPI_DISPATCH_HANDER */
	CFG_INT(INTNO_IPI_DISPATCH_PRC2,
				{ TA_ENAINT, INTPRI_IPI_DISPATCH_PRC2 });
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
CLASS(CLS_PRC3){
#ifndef USE_BYPASS_IPI_DISPATCH_HANDER
	DEF_INH(INHNO_IPI_DISPATCH_PRC3,
				{ TA_NULL, _kernel_dispatch_handler });
#endif /* USE_BYPASS_IPI_DISPATCH_HANDER */
	CFG_INT(INTNO_IPI_DISPATCH_PRC3,
				{ TA_ENAINT, INTPRI_IPI_DISPATCH_PRC3 });
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
CLASS(CLS_PRC4){
#ifndef USE_BYPASS_IPI_DISPATCH_HANDER
	DEF_INH(INHNO_IPI_DISPATCH_PRC4,
				{ TA_NULL, _kernel_dispatch_handler });
#endif /* USE_BYPASS_IPI_DISPATCH_HANDER */
	CFG_INT(INTNO_IPI_DISPATCH_PRC4,
				{ TA_ENAINT, INTPRI_IPI_DISPATCH_PRC4 });
}
#endif /* TNUM_PRCID >= 4 */

/*
 *  カーネル終了ハンドラの登録
 */
CLASS(CLS_PRC1){
	DEF_INH(INHNO_IPI_EXT_KER_PRC1,
				{ TA_NULL, _kernel_ext_ker_handler });
	CFG_INT(INTNO_IPI_EXT_KER_PRC1,
				{ TA_ENAINT, INTPRI_IPI_EXT_KER_PRC1 });
}

#if TNUM_PRCID >= 2
CLASS(CLS_PRC2){
	DEF_INH(INHNO_IPI_EXT_KER_PRC2,
				{ TA_NULL, _kernel_ext_ker_handler });
	CFG_INT(INTNO_IPI_EXT_KER_PRC2,
				{ TA_ENAINT, INTPRI_IPI_EXT_KER_PRC2 });
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
CLASS(CLS_PRC3){
	DEF_INH(INHNO_IPI_EXT_KER_PRC3,
				{ TA_NULL, _kernel_ext_ker_handler });
	CFG_INT(INTNO_IPI_EXT_KER_PRC3,
				{ TA_ENAINT, INTPRI_IPI_EXT_KER_PRC3 });
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
CLASS(CLS_PRC4){
	DEF_INH(INHNO_IPI_EXT_KER_PRC4,
				{ TA_NULL, _kernel_ext_ker_handler });
	CFG_INT(INTNO_IPI_EXT_KER_PRC4,
				{ TA_ENAINT, INTPRI_IPI_EXT_KER_PRC4 });
}
#endif /* TNUM_PRCID >= 4 */

/*
 *  高分解能タイマ設定ハンドラの登録
 */
CLASS(CLS_PRC1){
	DEF_INH(INHNO_IPI_SET_HRT_EVT_PRC1,
				{ TA_NULL, _kernel_set_hrt_event_handler });
	CFG_INT(INTNO_IPI_SET_HRT_EVT_PRC1,
				{ TA_ENAINT, INTPRI_IPI_SET_HRT_EVT_PRC1 });
}

#if TNUM_PRCID >= 2
CLASS(CLS_PRC2){
	DEF_INH(INHNO_IPI_SET_HRT_EVT_PRC2,
				{ TA_NULL, _kernel_set_hrt_event_handler });
	CFG_INT(INTNO_IPI_SET_HRT_EVT_PRC2,
				{ TA_ENAINT, INTPRI_IPI_SET_HRT_EVT_PRC2 });
}
#endif /* TNUM_PRCID >= 2 */

#if TNUM_PRCID >= 3
CLASS(CLS_PRC3){
	DEF_INH(INHNO_IPI_SET_HRT_EVT_PRC3,
				{ TA_NULL, _kernel_set_hrt_event_handler });
	CFG_INT(INTNO_IPI_SET_HRT_EVT_PRC3,
				{ TA_ENAINT, INTPRI_IPI_SET_HRT_EVT_PRC3 });
}
#endif /* TNUM_PRCID >= 3 */

#if TNUM_PRCID >= 4
CLASS(CLS_PRC4){
	DEF_INH(INHNO_IPI_SET_HRT_EVT_PRC4,
				{ TA_NULL, _kernel_set_hrt_event_handler });
	CFG_INT(INTNO_IPI_SET_HRT_EVT_PRC4,
				{ TA_ENAINT, INTPRI_IPI_SET_HRT_EVT_PRC4 });
}
#endif /* TNUM_PRCID >= 4 */
